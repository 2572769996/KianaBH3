using KianaBH.KcpSharp;
using KianaBH.Proto;
using KianaBH.Util.Extensions;

namespace KianaBH.GameServer.Server.Packet.Send.Story;

public class PacketGetExtraStoryDataRsp : BasePacket
{
    public PacketGetExtraStoryDataRsp() : base(CmdIds.GetExtraStoryDataRsp)
    {
        MemoryStream ms = new(Extensions.StringToByteArray
        using BinaryReader br = new(ms);
        byte[] Body = br.ReadBytes((int)ms.Length);
        var rsp = GetExtraStoryDataRsp.Parser.ParseFrom(Body);
        SetData(rsp);
    }
}
